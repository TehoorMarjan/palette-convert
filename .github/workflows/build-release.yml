# This workflow will install Python dependencies, lint the code, ensure the tag
# and version match, package the code, create a release, and upload the package
#Â to the release.
name: Build Release

on:
  push:
    tags:
      - 'v*'

env:
  artifact: ''  # https://github.com/github/vscode-github-actions/issues/47#issuecomment-1488592302

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install
    - name: Lint
      run: |
        poetry run isort --check .
        poetry run black --check .
    - name: Ensure tag and version match
      run: |
        echo "v$(poetry version --short)" | grep -Eq "^${GITHUB_REF_NAME}\$" || exit 1
        echo "artifact=palette-$(poetry version --short).zip" >> $GITHUB_ENV
    - name: Package
      run: |
        poetry run poe package
    - name: Create Release
      id: create_release
      uses: shogo82148/actions-create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: Auto generated release
        draft: true
        prerelease: false
    - name: Upload to Release
      uses: shogo82148/actions-upload-release-asset@v1
      with:
        asset_path: ${{ env.artifact }}
        upload_url: ${{ steps.create_release.outputs.upload_url }}
